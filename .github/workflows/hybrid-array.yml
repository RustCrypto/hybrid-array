name: hybrid-array

on:
  pull_request:
    paths-ignore:
      - README.md
  push:
    branches: master
    paths-ignore:
      - README.md

permissions:
  contents: read

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.65.0 # MSRV
          - stable
        target:
          - armv7a-none-eabi
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - run: cargo build --no-default-features --target ${{ matrix.target }}

  test:
    strategy:
      matrix:
        toolchain:
          - 1.65.0 # MSRV
          - stable
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - run: cargo test
      - run: cargo test --all-features

  miri:
    runs-on: ubuntu-latest
    env:
      MIRIFLAGS: "-Zmiri-symbolic-alignment-check -Zmiri-strict-provenance"
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - s390x-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: rustup component add miri && cargo miri setup
      - run: cargo miri test --target ${{ matrix.target }} --all-features

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.75.0
          components: clippy
      - run: cargo clippy --all --all-features -- -D warnings

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt
      - run: cargo fmt --all -- --check

  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - run: cargo doc --all-features
